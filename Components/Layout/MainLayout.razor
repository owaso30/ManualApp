@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <!-- #startregion ログイン状態表示 -->
            <div class="d-flex justify-content-between align-items-center w-100">
                <div>
                    @if (isSignedIn)
                    {
                        <span class="text-success">
                            <i class="bi bi-person-check"></i>
                             @userEmail
                        </span>
                    }
                </div>
                <div>
                    @if (isSignedIn)
                    {
                        <a class="btn btn-outline-danger btn-sm" href="/Identity/Account/Logout" title="ログアウト">
                            <i class="fas fa-sign-out-alt"></i>
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-outline-secondary btn-sm me-2" href="/Identity/Account/Register">新規登録</a>
                        <a class="btn btn-outline-primary btn-sm" href="/Identity/Account/Login">ログイン</a>
                    }
                </div>
            </div>
            <!-- #endregion -->
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool isSignedIn = false;
    private string userEmail = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await UpdateAuthState();
    }

    private async Task UpdateAuthState()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            isSignedIn = authState.User.Identity?.IsAuthenticated ?? false;
            userEmail = authState.User.Identity?.Name ?? string.Empty;
            
            StateHasChanged();
        }
        catch (Exception)
        {
            isSignedIn = false;
            userEmail = string.Empty;
            StateHasChanged();
        }
    }
}

