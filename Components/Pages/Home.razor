@page "/"
@rendermode InteractiveServer
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager Navigation

<div class="container mt-4">
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">読み込み中...</span>
            </div>
            <p class="mt-2">読み込み中...</p>
        </div>
    }
    else if (isSignedIn && currentUser != null)
    {
        <!-- ログイン済みユーザー向けの画面 -->
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-user-circle fa-2x me-3"></i>
                            <div>
                                <h2 class="mb-0">ようこそ、@currentUser.DisplayName さん！</h2>
                                <p class="mb-0 opacity-75">ManualAppへようこそ</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12">
                                <h5 class="text-primary mb-3">
                                    <i class="fas fa-info-circle me-2"></i>アカウント情報
                                </h5>
                                <div class="list-group list-group-flush">
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <span><i class="fas fa-envelope me-2 text-muted"></i>メールアドレス</span>
                                        <span class="badge bg-light text-dark">@currentUser.Email</span>
                                    </div>
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <span><i class="fas fa-user me-2 text-muted"></i>表示名</span>
                                        <span class="badge bg-light text-dark">@currentUser.DisplayName</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 最近のアクティビティ -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            <i class="fas fa-history me-2"></i>最近のアクティビティ
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            ログイン時刻: @DateTime.Now.ToString("yyyy年MM月dd日 HH:mm")
                        </div>
                        <p class="text-muted">アクティビティ履歴は今後追加予定です。</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- 未ログインユーザー向けの画面 -->
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-primary text-white text-center">
                        <i class="fas fa-rocket fa-3x mb-3"></i>
                        <h2 class="mb-0">ManualAppへようこそ！</h2>
                        <p class="mb-0 opacity-75">アカウントを作成して、すべての機能をご利用ください</p>
                    </div>
                    <div class="card-body text-center">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="card h-100 border-0 bg-light">
                                    <div class="card-body">
                                        <i class="fas fa-user-plus fa-2x text-primary mb-3"></i>
                                        <h5>新規登録</h5>
                                        <p class="text-muted text-start">アカウントを作成して、すべての機能を利用できます。</p>
                                        <a href="/Identity/Account/Register" class="btn btn-primary">
                                            <i class="fas fa-user-plus me-2"></i>新規登録
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="card h-100 border-0 bg-light">
                                    <div class="card-body">
                                        <i class="fas fa-sign-in-alt fa-2x text-success mb-3"></i>
                                        <h5>ログイン</h5>
                                        <p class="text-muted text-start">既存のアカウントでログインして、サービスをご利用ください。</p>
                                        <a href="/Identity/Account/Login" class="btn btn-success">
                                            <i class="fas fa-sign-in-alt me-2"></i>ログイン
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <hr class="my-4">
                        
                        <div class="row">
                            <div class="col-12">
                                <div class="alert alert-info text-start">
                                    <i class="fas fa-info-circle me-2"></i>
                                    ログインページでは、メールアドレス・パスワードでのログインに加えて、Googleアカウントでの簡単ログインもご利用いただけます。
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private bool isLoading = true;
    private bool isSignedIn = false;
    private ApplicationUser? currentUser;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserInfo();
    }

    private async Task LoadUserInfo()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            isSignedIn = authState.User.Identity?.IsAuthenticated ?? false;

            if (isSignedIn && authState.User.Identity?.Name != null)
            {
                // ユーザー情報を取得
                currentUser = await UserManager.FindByEmailAsync(authState.User.Identity.Name);
                
                // メール未確認の場合はログアウト状態として扱う
                if (currentUser != null && !currentUser.EmailConfirmed)
                {
                    await SignInManager.SignOutAsync();
                    isSignedIn = false;
                    currentUser = null;
                }
            }
        }
        catch (Exception)
        {
            // エラーが発生した場合はログアウト状態にする
            isSignedIn = false;
            currentUser = null;
        }
        finally
        {
            isLoading = false;
        }
    }

}
